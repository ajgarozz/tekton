apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ci-pipeline
spec:
  params:
    - name: gitapikey
    - name: sha
    - name: apiurl
  tasks:
    - name: ci
      taskRef:
        name: ci
      params:
        - name: gitapikey
          value: $(params.gitapikey)
        - name: sha
          value: $(params.sha)
        - name: apiurl
          value: $(params.apiurl)
---
apiVersion: tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: ci-template
spec:
  params:
    - name: gitapikey
    - name: sha
    - name: apiurl
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: ci-
      spec:
        pipelineRef:
          name: ci-pipeline
        params:
          - name: gitapikey
            value: $(params.gitapikey)
          - name: sha
            value: $(params.sha)
          - name: apiurl
            value: $(params.apiurl)
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: binding-ci-github-pr
spec:
  params:
    - name: repository
      value: "$(event.pull_request.base.repo.clone_url)"
    - name: branch
      value: "$(event.pull_request.base.ref)"
    - name: revision
      value: "$(event.pull_request.head.sha)"
    - name: triggerName
      value: "github-pullrequest"
    - name: prnum
      value: "$(event.number)"
    - name: sha
      value: "$(event.pull_request.head.sha)"
    - name: apiurl
      value: "$(event.pull_request.base.repo.url)"
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: ci-git-pr
spec:
  triggers:
    - binding:
        name: binding-ci-github-pr
      template:
        name: ci-template
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ci
spec:
  params:
    - name: gitapikey
    - name: sha
    - name: apiurl
  steps:
    - name: init-pending-statuses
      image: ibmcom/pipeline-base-image:2.6
      command:
        - bash
      args:
        - -cxe
        - | 
          gitapikey="$(params.gitapikey)"
          sha="$(params.sha)"
          apiurl="$(params.apiurl)"
          
          apiurlpass=${apiurl:0:8}${gitapikey}@${apiurl:8}

          curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d '{"state":"pending", "context":"build"}'
          curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d '{"state":"pending", "context":"deploy"}'
          curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d '{"state":"pending", "context":"test"}'
          curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d '{"state":"pending", "context":"validate"}'

          sleep 10
    - name: build
      image: ibmcom/pipeline-base-image:2.6
      command:
        - bash
      args:
        - -cxe
        - | 
          gitapikey="$(params.gitapikey)"
          sha="$(params.sha)"
          apiurl="$(params.apiurl)"
          
          apiurlpass=${apiurl:0:8}${gitapikey}@${apiurl:8}

          context="build"
          targeturl="http://somepath.goes.here"
          if bash simulate/build.sh; then
            curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d "{\"state\":\"success\", \"context\":\"${context}\",\"target_url\":\"${targeturl}\"}"
          else
            curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d "{\"state\":\"failure\", \"context\":\"${context}\",\"target_url\":\"${targeturl}\"}"
          fi
    - name: deploy
      image: ibmcom/pipeline-base-image:2.6
      command:
        - bash
      args:
        - -cxe
        - | 
          gitapikey="$(params.gitapikey)"
          sha="$(params.sha)"
          apiurl="$(params.apiurl)"
          
          apiurlpass=${apiurl:0:8}${gitapikey}@${apiurl:8}

          context="deploy"
          targeturl="http://somepath.goes.here"
          if true; then
            curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d "{\"state\":\"success\", \"context\":\"${context}\",\"target_url\":\"${targeturl}\"}"
          else
            curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d "{\"state\":\"failure\", \"context\":\"${context}\",\"target_url\":\"${targeturl}\"}"
          fi
    - name: test
      image: ibmcom/pipeline-base-image:2.6
      command:
        - bash
      args:
        - -cxe
        - | 
          gitapikey="$(params.gitapikey)"
          sha="$(params.sha)"
          apiurl="$(params.apiurl)"
          
          apiurlpass=${apiurl:0:8}${gitapikey}@${apiurl:8}

          context="test"
          targeturl="http://somepath.goes.here"
          if true; then
            curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d "{\"state\":\"success\", \"context\":\"${context}\",\"target_url\":\"${targeturl}\"}"
          else
            curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d "{\"state\":\"failure\", \"context\":\"${context}\",\"target_url\":\"${targeturl}\"}"
          fi
    - name: validate
      image: ibmcom/pipeline-base-image:2.6
      command:
        - bash
      args:
        - -cxe
        - | 
          gitapikey="$(params.gitapikey)"
          sha="$(params.sha)"
          apiurl="$(params.apiurl)"
          
          apiurlpass=${apiurl:0:8}${gitapikey}@${apiurl:8}

          context="validate"
          targeturl="http://somepath.goes.here"
          if fail; then
            curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d "{\"state\":\"success\", \"context\":\"${context}\",\"target_url\":\"${targeturl}\"}"
          else
            curl -X POST -H "Accept: application/vnd.github.v3+json" ${apiurlpass}/statuses/${sha} -d "{\"state\":\"failure\", \"context\":\"${context}\",\"target_url\":\"${targeturl}\"}"
          fi
